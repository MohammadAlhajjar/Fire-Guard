# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  app_base_url: "%env(APP_BASE_URL)%"
  website_base_url: "%env(WEBSITE_BASE_URL)%"
  app_env: "%env(APP_ENV)%"
  using_reverse_proxy: "%env(bool:USING_REVERSE_PROXY)%"
  database_name: "%env(DATABASE_NAME)%"
  sender_email: "%env(SENDER_EMAIL)%"
  sender_name: "%env(SENDER_NAME)%"
  expiration_otp_code: "%env(EXPIRATION_OTP_CODE)%"

  languages:
    ar:
      name: العربية
    en:
      name: English

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  jms_serializer.serialized_name_annotation_strategy:
    class: JMS\Serializer\Naming\SerializedNameAnnotationStrategy
    arguments:
      - "@jms_serializer.identical_property_naming_strategy"

  App\Listener\JWTListener:
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_jwt_decoded,
          method: onJWTDecoded,
        }
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_jwt_created,
          method: onJWTCreated,
        }
      - {
        name: kernel.event_listener,
        event: lexik_jwt_authentication.on_jwt_decoded,
        method: onJWTDecodedFireBrigade,
        }

  App\Listener\ExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception }

  App\Listener\EntityListener:
    tags:
      - { name: doctrine.event_listener, event: postLoad }
      - { name: doctrine.event_listener, event: postUpdate }
      - { name: doctrine.event_listener, event: postPersist }
      - { name: doctrine.event_listener, event: postRemove }

a2lix_translation_form:
  locale_provider: default
  locales: [en, ar]
  default_locale: en
  required_locales: [en, ar]

knp_paginator:
  page_range: 5 # number of links shown in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
  default_options:
    page_name: page # page query parameter name
    sort_field_name: sort # sort field query parameter name
    sort_direction_name: direction # sort direction query parameter name
    distinct: true # ensure distinct results, useful when ORM queries are using GROUP BY statements
    filter_field_name: filterField # filter field query parameter name
    filter_value_name: filterValue # filter value query parameter name
  template:
    pagination: "@KnpPaginator/Pagination/bootstrap_v5_pagination.html.twig" # sliding pagination controls template
    sortable: "@KnpPaginator/Pagination/sortable_link.html.twig" # sort link template
    filtration: "@KnpPaginator/Pagination/filtration.html.twig" # filters template
